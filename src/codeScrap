{/*handleRating = (stakeholder, newRating) => {
  let newStakeholdersState = [...this.state.stakeholders]
  const stakeholderIndex = newStakeholdersState.indexOf(stakeholder)
  newStakeholdersState[stakeholderIndex].ratings[ratings.length -1].power = newRating
  this.setState({
    stakeholders: newStakeholdersState
  })
}*/}


{ ratings:
  [
    ...stakeholder.ratings, //copy all the old ratings to persist them
    { // add a new ratings object
      ...newRatings, // first take all the new ratings we got passed as arguments
      ...stakeholder.ratings[ // fill it with any other ratings we had in the past
        stakeholder.ratings.length-1 // the latest rating is at the last index in the array
      ]
    }
  ]
}
),


stakeholder.name &&


      fetch('http://localhost:3000/stakeholders')
      .then(res => res.json())
      .then(stakeholders => this.setState({ stakeholders: stakeholders}))


      .then(positivity => this.setState({ positivity:
        this.state.stakeholders.map(stakeholder => stakeholder.ratings[stakeholder.ratings.length -1].positivity)}))


        componentDidMount() {
          const { id } = this.props.match.params
          APILogin.getProjectStakeholders(id)
          .then(stakeholders => this.setState({ stakeholders: stakeholders}))
          }

          <div class="ui checkbox">
            <input type="checkbox" name="example">
            <label>Make my profile visible</label>
          </div>


          <FormControlLabel
            control={<Checkbox value="remember" color="primary" />}
            label="Remember me"
          />

          <div class="ui checkbox">
          <input type="checkbox" />
